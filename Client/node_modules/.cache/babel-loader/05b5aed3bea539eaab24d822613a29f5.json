{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLocation } from \"wouter\";\nconst apiKey = \"e17f44d2\";\nconst url = \"https://images-na.ssl-images-amazon.com/images/I/41bLP6NzvKL.jpg\";\nexport default async function getAll(_ref) {\n  _s();\n\n  let {\n    keyword,\n    page\n  } = _ref;\n  const [, pushLocation] = useLocation();\n  const apiURL = `http://www.omdbapi.com/?apikey=${apiKey}&s=${keyword}&page=${page}`;\n  return fetch(apiURL).then(res => res.json()).then(response => {\n    const elements = response.Search;\n    const results = elements.map(result => {\n      const {\n        Title,\n        imdbID,\n        Poster,\n        Type\n      } = result;\n      return Poster === \"N/A\" ? {\n        Title,\n        imdbID,\n        Poster: url,\n        Type\n      } : {\n        Title,\n        imdbID,\n        Poster,\n        Type\n      };\n    });\n    return results === undefined ? pushLocation('/404') : results;\n  });\n}\n\n_s(getAll, \"EeNezu3V7bgWZ2BPbOdKiZqxwcQ=\", false, function () {\n  return [useLocation];\n});","map":{"version":3,"sources":["C:/Users/Evelyn/OneDrive/Documentos/react-movie-api/react-movie-api/src/services/getAll/index.js"],"names":["React","useLocation","apiKey","url","getAll","keyword","page","pushLocation","apiURL","fetch","then","res","json","response","elements","Search","results","map","result","Title","imdbID","Poster","Type","undefined"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,MAAMC,MAAM,GAAG,UAAf;AACA,MAAMC,GAAG,GAAG,kEAAZ;AAEA,eAAe,eAAeC,MAAf,OAAyC;AAAA;;AAAA,MAAlB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAkB;AACpD,QAAM,GAAGC,YAAH,IAAmBN,WAAW,EAApC;AACA,QAAMO,MAAM,GAAI,kCAAiCN,MAAO,MAAKG,OAAQ,SAAQC,IAAK,EAAlF;AAEA,SAAOG,KAAK,CAACD,MAAD,CAAL,CACJE,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECG,QAAQ,IAAK;AACjB,UAAMC,QAAQ,GAAID,QAAQ,CAACE,MAA3B;AACA,UAAMC,OAAO,GAAGF,QAAQ,CAACG,GAAT,CAAaC,MAAM,IAAI;AACnC,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA,MAAjB;AAAyBC,QAAAA;AAAzB,UAAkCJ,MAAxC;AACA,aAAOG,MAAM,KAAM,KAAZ,GAAoB;AAAEF,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA,MAAM,EAAElB,GAAzB;AAA8BmB,QAAAA;AAA9B,OAApB,GACL;AAAEH,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA,MAAjB;AAAyBC,QAAAA;AAAzB,OADF;AAEH,KAJe,CAAhB;AAKA,WAAON,OAAO,KAAKO,SAAZ,GAAwBhB,YAAY,CAAC,MAAD,CAApC,GAA+CS,OAAtD;AACH,GAVM,CAAP;AAWH;;GAf6BZ,M;UACDH,W","sourcesContent":["import React from 'react'\r\nimport { useLocation } from \"wouter\"\r\n\r\nconst apiKey = \"e17f44d2\"\r\nconst url = \"https://images-na.ssl-images-amazon.com/images/I/41bLP6NzvKL.jpg\"\r\n\r\nexport default async function getAll ({ keyword, page}) {\r\n    const [, pushLocation] = useLocation()\r\n    const apiURL = `http://www.omdbapi.com/?apikey=${apiKey}&s=${keyword}&page=${page}`\r\n\r\n    return fetch(apiURL)\r\n      .then(res => res.json())\r\n      .then(response  => {\r\n        const elements =  response.Search\r\n        const results = elements.map(result => { \r\n            const { Title, imdbID, Poster, Type } = result\r\n            return Poster  === \"N/A\" ? { Title, imdbID, Poster: url, Type } \r\n            : { Title, imdbID, Poster, Type }\r\n        })\r\n        return results === undefined ? pushLocation('/404') : results \r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}