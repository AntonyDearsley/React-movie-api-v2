{"ast":null,"code":"import getImage from \"../getImage\";\nconst api_key = 'b677204d99e9870416faefa56773d56c';\nexport default async function getBackdrop() {\n  const apiURLMovie = `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=es-ES&page=1`;\n  const apiURLSerie = `https://api.themoviedb.org/3/tv/popular?api_key=${api_key}&language=es-ES&page=1`;\n  const apiURLMovieImg = `https://api.themoviedb.org/3/tv/popular?api_key=${api_key}&language=es-ES&page=1`;\n  const apiURLSerieImg = `https://api.themoviedb.org/3/tv/popular?api_key=${api_key}&language=es-ES&page=1`;\n  const arr = [];\n  const arr_id = [];\n  const arr_logo = [];\n  fetch(apiURLMovie).then(res => res.json()).then(response => {\n    const data = response.results;\n    data.map(movie => {\n      const {\n        backdrop_path,\n        id\n      } = movie;\n      const url = getImage(backdrop_path);\n      arr.push(url);\n      arr_id.push(id);\n      return 1;\n    });\n  });\n  fetch(apiURLSerie).then(res => res.json()).then(response => {\n    const data = response.results;\n    data.map(serie => {\n      const {\n        backdrop_path,\n        id\n      } = serie;\n      const url = getImage(backdrop_path);\n      arr.push(url);\n      arr_id.push(id);\n      return 1;\n    });\n  }); // shuffle arr \n\n  arr.sort(() => Math.random() - 0.5);\n  arr_id.forEach(element => {\n    fetch(apiURLSerie).then(res => res.json()).then(response => {\n      const data = response.results;\n      data.map(serie => {\n        const {\n          backdrop_path,\n          id\n        } = serie;\n        const url = getImage(backdrop_path);\n        arr.push(url);\n        arr_id.push(id);\n        return 1;\n      });\n    });\n  });\n  return [arr, arr_id, arr_logo];\n}","map":{"version":3,"sources":["C:/Users/Evelyn/OneDrive/Documentos/React-movie-api-v2/React-movie-api-v2/src/services/getBackdrop/index.js"],"names":["getImage","api_key","getBackdrop","apiURLMovie","apiURLSerie","apiURLMovieImg","apiURLSerieImg","arr","arr_id","arr_logo","fetch","then","res","json","response","data","results","map","movie","backdrop_path","id","url","push","serie","sort","Math","random","forEach","element"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AAGA,eAAe,eAAeC,WAAf,GAA6B;AACxC,QAAMC,WAAW,GAChB,sDAAqDF,OAAQ,wBAD9D;AAGA,QAAMG,WAAW,GAChB,mDAAkDH,OAAQ,wBAD3D;AAGA,QAAMI,cAAc,GACnB,mDAAkDJ,OAAQ,wBAD3D;AAGA,QAAMK,cAAc,GACnB,mDAAkDL,OAAQ,wBAD3D;AAGA,QAAMM,GAAG,GAAG,EAAZ;AAEA,QAAMC,MAAM,GAAG,EAAf;AAEA,QAAMC,QAAQ,GAAG,EAAjB;AAEAC,EAAAA,KAAK,CAACP,WAAD,CAAL,CACKQ,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,QAAQ,IAAI;AACd,UAAMC,IAAI,GAAGD,QAAQ,CAACE,OAAtB;AACAD,IAAAA,IAAI,CAACE,GAAL,CAASC,KAAK,IAAI;AACd,YAAM;AAACC,QAAAA,aAAD;AAAgBC,QAAAA;AAAhB,UAAuBF,KAA7B;AACA,YAAMG,GAAG,GAAGrB,QAAQ,CAACmB,aAAD,CAApB;AACAZ,MAAAA,GAAG,CAACe,IAAJ,CAASD,GAAT;AACAb,MAAAA,MAAM,CAACc,IAAP,CAAYF,EAAZ;AACA,aAAO,CAAP;AACH,KAND;AAOH,GAXL;AAaIV,EAAAA,KAAK,CAACN,WAAD,CAAL,CACCO,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,QAAQ,IAAI;AACd,UAAMC,IAAI,GAAGD,QAAQ,CAACE,OAAtB;AACAD,IAAAA,IAAI,CAACE,GAAL,CAASM,KAAK,IAAI;AACd,YAAM;AAACJ,QAAAA,aAAD;AAAiBC,QAAAA;AAAjB,UAAwBG,KAA9B;AACA,YAAMF,GAAG,GAAGrB,QAAQ,CAACmB,aAAD,CAApB;AACAZ,MAAAA,GAAG,CAACe,IAAJ,CAASD,GAAT;AACAb,MAAAA,MAAM,CAACc,IAAP,CAAYF,EAAZ;AACA,aAAO,CAAP;AACH,KAND;AAOH,GAXD,EAhCoC,CA6CxC;;AACAb,EAAAA,GAAG,CAACiB,IAAJ,CAAS,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA/B;AAGAlB,EAAAA,MAAM,CAACmB,OAAP,CAAeC,OAAO,IAAI;AACtBlB,IAAAA,KAAK,CAACN,WAAD,CAAL,CACCO,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,QAAQ,IAAI;AACd,YAAMC,IAAI,GAAGD,QAAQ,CAACE,OAAtB;AACAD,MAAAA,IAAI,CAACE,GAAL,CAASM,KAAK,IAAI;AACd,cAAM;AAACJ,UAAAA,aAAD;AAAiBC,UAAAA;AAAjB,YAAwBG,KAA9B;AACA,cAAMF,GAAG,GAAGrB,QAAQ,CAACmB,aAAD,CAApB;AACAZ,QAAAA,GAAG,CAACe,IAAJ,CAASD,GAAT;AACAb,QAAAA,MAAM,CAACc,IAAP,CAAYF,EAAZ;AACA,eAAO,CAAP;AACH,OAND;AAOH,KAXD;AAaH,GAdD;AAgBA,SAAO,CAACb,GAAD,EAAMC,MAAN,EAAcC,QAAd,CAAP;AACH","sourcesContent":["import getImage from \"../getImage\"\r\n\r\nconst api_key = 'b677204d99e9870416faefa56773d56c'\r\n\r\n\r\nexport default async function getBackdrop() { \r\n    const apiURLMovie = \r\n    `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=es-ES&page=1`\r\n\r\n    const apiURLSerie = \r\n    `https://api.themoviedb.org/3/tv/popular?api_key=${api_key}&language=es-ES&page=1`\r\n\r\n    const apiURLMovieImg = \r\n    `https://api.themoviedb.org/3/tv/popular?api_key=${api_key}&language=es-ES&page=1`\r\n\r\n    const apiURLSerieImg = \r\n    `https://api.themoviedb.org/3/tv/popular?api_key=${api_key}&language=es-ES&page=1`\r\n\r\n    const arr = []\r\n\r\n    const arr_id = []\r\n\r\n    const arr_logo = []\r\n\r\n    fetch(apiURLMovie)\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            const data = response.results\r\n            data.map(movie => { \r\n                const {backdrop_path ,id } = movie \r\n                const url = getImage(backdrop_path)\r\n                arr.push(url)\r\n                arr_id.push(id)\r\n                return 1\r\n            }) \r\n        })\r\n    \r\n        fetch(apiURLSerie)\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            const data = response.results\r\n            data.map(serie => { \r\n                const {backdrop_path , id } = serie \r\n                const url = getImage(backdrop_path)\r\n                arr.push(url)\r\n                arr_id.push(id)\r\n                return 1\r\n            }) \r\n        })\r\n\r\n    // shuffle arr \r\n    arr.sort(() => Math.random() - 0.5);\r\n    \r\n     \r\n    arr_id.forEach(element => {\r\n        fetch(apiURLSerie)\r\n        .then(res => res.json())\r\n        .then(response => {\r\n            const data = response.results\r\n            data.map(serie => { \r\n                const {backdrop_path , id } = serie \r\n                const url = getImage(backdrop_path)\r\n                arr.push(url)\r\n                arr_id.push(id)\r\n                return 1\r\n            }) \r\n        })\r\n        \r\n    });\r\n    \r\n    return [arr, arr_id, arr_logo]\r\n}"]},"metadata":{},"sourceType":"module"}