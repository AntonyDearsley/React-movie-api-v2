{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport getSeries from '../../services/getSeries';\nexport function useSeries(_ref) {\n  _s();\n\n  let {\n    keyword\n  } = _ref;\n  const [parameter, setParameter] = useState({\n    loading: true,\n    results: []\n  });\n  const [page] = useState(1);\n  useEffect(() => {\n    getSeries({\n      keyword,\n      page\n    }).then(elements => {\n      setTimeout(() => {\n        setParameter({\n          loading: false,\n          results: elements\n        });\n      }, 500);\n      /*\r\n      setTimeout(() => {\r\n        window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\r\n      }, 500)\r\n      */\n    });\n  }, [keyword, page]);\n  return {\n    parameter,\n    setParameter\n  };\n}\n\n_s(useSeries, \"38Jk/dd/LSdyHktIUz2uqkM4Kx8=\");","map":{"version":3,"sources":["C:/Users/Evelyn/OneDrive/Documentos/React-movie-api-v2/React-movie-api-v2/src/hooks/useSeries/index.js"],"names":["useEffect","useState","getSeries","useSeries","keyword","parameter","setParameter","loading","results","page","then","elements","setTimeout"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAO,SAASC,SAAT,OAAgC;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CACxC;AAACM,IAAAA,OAAO,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GADwC,CAA1C;AAGE,QAAM,CAACC,IAAD,IAASR,QAAQ,CAAC,CAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,SAAS,CAAC;AAAEE,MAAAA,OAAF;AAAYK,MAAAA;AAAZ,KAAD,CAAT,CACKC,IADL,CACUC,QAAQ,IAAI;AAChBC,MAAAA,UAAU,CAAC,MAAM;AACfN,QAAAA,YAAY,CAAC;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,OAAO,EAAEG;AAA3B,SAAD,CAAZ;AACD,OAFS,EAEP,GAFO,CAAV;AAGA;AACd;AACA;AACA;AACA;AACa,KAVL;AAWH,GAZQ,EAYN,CAACP,OAAD,EAAUK,IAAV,CAZM,CAAT;AAeA,SAAO;AAACJ,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAP;AACH;;GAtBeH,S","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport getSeries from '../../services/getSeries'\r\n\r\nexport function useSeries({ keyword }) {\r\n  const [parameter, setParameter] = useState(\r\n    {loading: true, results: []}\r\n  )\r\n    const [page] = useState(1)\r\n\r\n    useEffect(() => {\r\n        getSeries({ keyword , page })\r\n            .then(elements => {\r\n              setTimeout(() => {\r\n                setParameter({ loading: false, results: elements })\r\n              }, 500)\r\n              /*\r\n              setTimeout(() => {\r\n                window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\r\n              }, 500)\r\n              */\r\n            }) \r\n    }, [keyword, page]) \r\n\r\n\r\n    return {parameter, setParameter};\r\n}"]},"metadata":{},"sourceType":"module"}