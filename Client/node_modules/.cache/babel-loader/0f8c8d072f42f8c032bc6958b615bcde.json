{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evelyn\\\\OneDrive\\\\Documentos\\\\React-movie-api-v2\\\\React-movie-api-v2\\\\src\\\\hooks\\\\useAll\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport getAll from '../../services/getAll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useAll(_ref) {\n  _s();\n\n  let {\n    keyword\n  } = _ref;\n  const [parameter, setParameter] = useState({\n    loading: false,\n    results: []\n  });\n  const [page] = useState(1);\n  useEffect(() => {\n    setParameter(actualElements => ({\n      loading: true,\n      results: actualElements.results\n    }));\n    getAll({\n      keyword,\n      page\n    }).then(elements => {\n      setParameter({\n        loading: false,\n        results: elements\n      });\n      /*\r\n      setTimeout(() => {\r\n        window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\r\n      }, 500)\r\n      */\n    });\n  }, [keyword, page]);\n  return parameter.loading === false ? {\n    parameter,\n    setParameter\n  } : /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Pepe\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 72\n  }, this);\n}\n\n_s(useAll, \"XxPUlt02L8wkYgs5OwUdkG1OgxI=\");","map":{"version":3,"sources":["C:/Users/Evelyn/OneDrive/Documentos/React-movie-api-v2/React-movie-api-v2/src/hooks/useAll/index.js"],"names":["useEffect","useState","getAll","useAll","keyword","parameter","setParameter","loading","results","page","actualElements","then","elements"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,OAAO,SAASC,MAAT,OAA6B;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CACxC;AAACM,IAAAA,OAAO,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GADwC,CAA1C;AAGA,QAAM,CAACC,IAAD,IAASR,QAAQ,CAAC,CAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY,CACVI,cAAc,KAAK;AAACH,MAAAA,OAAO,EAAE,IAAV;AAAgBC,MAAAA,OAAO,EAAEE,cAAc,CAACF;AAAxC,KAAL,CADJ,CAAZ;AAGAN,IAAAA,MAAM,CAAC;AAAEE,MAAAA,OAAF;AAAYK,MAAAA;AAAZ,KAAD,CAAN,CACKE,IADL,CACUC,QAAQ,IAAI;AAChBN,MAAAA,YAAY,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,OAAO,EAAEI;AAA3B,OAAD,CAAZ;AACA;AACd;AACA;AACA;AACA;AACa,KARL;AASH,GAbQ,EAaN,CAACR,OAAD,EAAUK,IAAV,CAbM,CAAT;AAkBA,SAAOJ,SAAS,CAACE,OAAV,KAAsB,KAAtB,GAA8B;AAAEF,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA9B,gBAA4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnE;AACH;;GAzBeH,M","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport getAll from '../../services/getAll'\r\n\r\nexport function useAll({ keyword }) {\r\n    const [parameter, setParameter] = useState(\r\n      {loading: false, results: []}\r\n    )\r\n    const [page] = useState(1)\r\n\r\n    useEffect(() => {\r\n        setParameter(\r\n          actualElements => ({loading: true, results: actualElements.results})\r\n        )\r\n        getAll({ keyword , page })\r\n            .then(elements => {\r\n              setParameter({ loading: false, results: elements })\r\n              /*\r\n              setTimeout(() => {\r\n                window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\r\n              }, 500)\r\n              */\r\n            }) \r\n    }, [keyword, page]) \r\n\r\n\r\n\r\n\r\n    return parameter.loading === false ? { parameter, setParameter } : <h2>Pepe</h2>\r\n}"]},"metadata":{},"sourceType":"module"}