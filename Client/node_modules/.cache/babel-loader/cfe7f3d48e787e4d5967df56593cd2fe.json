{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evelyn\\\\OneDrive\\\\Documentos\\\\react-movie-api\\\\react-movie-api\\\\src\\\\services\\\\getAll\\\\index.js\";\nimport { Route } from \"wouter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"e17f44d2\";\nconst url = \"https://images-na.ssl-images-amazon.com/images/I/41bLP6NzvKL.jpg\";\nexport default async function getAll(_ref) {\n  let {\n    keyword,\n    page\n  } = _ref;\n  const apiURL = `http://www.omdbapi.com/?apikey=${apiKey}&s=${keyword}&page=${page}`;\n  return fetch(apiURL).then(res => res.json()).then(response => {\n    const elements = response.Search;\n    const results = elements.map(result => {\n      const {\n        Title,\n        imdbID,\n        Poster,\n        Type\n      } = result;\n      return Poster === \"N/A\" ? {\n        Title,\n        imdbID,\n        Poster: url,\n        Type\n      } : {\n        Title,\n        imdbID,\n        Poster,\n        Type\n      };\n    });\n    return results === undefined ? /*#__PURE__*/_jsxDEV(Route, {\n      component: Err,\n      path: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : results;\n  });\n}","map":{"version":3,"sources":["C:/Users/Evelyn/OneDrive/Documentos/react-movie-api/react-movie-api/src/services/getAll/index.js"],"names":["Route","apiKey","url","getAll","keyword","page","apiURL","fetch","then","res","json","response","elements","Search","results","map","result","Title","imdbID","Poster","Type","undefined","Err"],"mappings":";AAAA,SAASA,KAAT,QAAsB,QAAtB;;AAEA,MAAMC,MAAM,GAAG,UAAf;AACA,MAAMC,GAAG,GAAG,kEAAZ;AAEA,eAAe,eAAeC,MAAf,OAAyC;AAAA,MAAlB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAkB;AACpD,QAAMC,MAAM,GAAI,kCAAiCL,MAAO,MAAKG,OAAQ,SAAQC,IAAK,EAAlF;AAEA,SAAOE,KAAK,CAACD,MAAD,CAAL,CACJE,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECG,QAAQ,IAAK;AACjB,UAAMC,QAAQ,GAAID,QAAQ,CAACE,MAA3B;AACA,UAAMC,OAAO,GAAGF,QAAQ,CAACG,GAAT,CAAaC,MAAM,IAAI;AACnC,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA,MAAjB;AAAyBC,QAAAA;AAAzB,UAAkCJ,MAAxC;AACA,aAAOG,MAAM,KAAM,KAAZ,GAAoB;AAAEF,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA,MAAM,EAAEjB,GAAzB;AAA8BkB,QAAAA;AAA9B,OAApB,GACL;AAAEH,QAAAA,KAAF;AAASC,QAAAA,MAAT;AAAiBC,QAAAA,MAAjB;AAAyBC,QAAAA;AAAzB,OADF;AAEH,KAJe,CAAhB;AAKA,WAAON,OAAO,KAAKO,SAAZ,gBACP,QAAC,KAAD;AACI,MAAA,SAAS,EAAEC,GADf;AAEI,MAAA,IAAI,EAAC;AAFT;AAAA;AAAA;AAAA;AAAA,YADO,GAKJR,OALH;AAMH,GAfM,CAAP;AAgBH","sourcesContent":["import { Route } from \"wouter\"\r\n\r\nconst apiKey = \"e17f44d2\"\r\nconst url = \"https://images-na.ssl-images-amazon.com/images/I/41bLP6NzvKL.jpg\"\r\n\r\nexport default async function getAll ({ keyword, page}) {\r\n    const apiURL = `http://www.omdbapi.com/?apikey=${apiKey}&s=${keyword}&page=${page}`\r\n\r\n    return fetch(apiURL)\r\n      .then(res => res.json())\r\n      .then(response  => {\r\n        const elements =  response.Search\r\n        const results = elements.map(result => { \r\n            const { Title, imdbID, Poster, Type } = result\r\n            return Poster  === \"N/A\" ? { Title, imdbID, Poster: url, Type } \r\n            : { Title, imdbID, Poster, Type }\r\n        })\r\n        return results === undefined ?  (\r\n        <Route\r\n            component={Err}\r\n            path=\"/404\" \r\n        />\r\n        ): results \r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}