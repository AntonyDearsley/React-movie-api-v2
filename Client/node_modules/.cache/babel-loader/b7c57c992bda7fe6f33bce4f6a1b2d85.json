{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport getAll from '../../services/getAll';\nexport function useAll(_ref) {\n  _s();\n\n  let {\n    keyword\n  } = _ref;\n  const [parameter, setParameter] = useState({\n    loading: false\n  });\n  const [page] = useState(1);\n  useEffect(() => {\n    getAll({\n      keyword,\n      page\n    }).then(elements => {\n      setParameter(elements);\n      /*\r\n      setTimeout(() => {\r\n        window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\r\n      }, 500)\r\n      */\n    });\n  }, [keyword, page]);\n  return parameter.length === [] ? {\n    parameter: [undefined],\n    setParameter\n  } : {\n    parameter,\n    setParameter\n  };\n}\n\n_s(useAll, \"/dQon7DURRLwH1+Cm5SDvzT/MtU=\");","map":{"version":3,"sources":["C:/Users/Evelyn/OneDrive/Documentos/React-movie-api-v2/React-movie-api-v2/src/hooks/useAll/index.js"],"names":["useEffect","useState","getAll","useAll","keyword","parameter","setParameter","loading","page","then","elements","length","undefined"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAO,SAASC,MAAT,OAA6B;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CACxC;AAACM,IAAAA,OAAO,EAAE;AAAV,GADwC,CAA1C;AAGA,QAAM,CAACC,IAAD,IAASP,QAAQ,CAAC,CAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,MAAM,CAAC;AAAEE,MAAAA,OAAF;AAAYI,MAAAA;AAAZ,KAAD,CAAN,CACKC,IADL,CACUC,QAAQ,IAAI;AAChBJ,MAAAA,YAAY,CAACI,QAAD,CAAZ;AACA;AACd;AACA;AACA;AACA;AACa,KARL;AASH,GAVQ,EAUN,CAACN,OAAD,EAAUI,IAAV,CAVM,CAAT;AAaA,SAAOH,SAAS,CAACM,MAAV,KAAqB,EAArB,GAA0B;AAACN,IAAAA,SAAS,EAAE,CAACO,SAAD,CAAZ;AAAyBN,IAAAA;AAAzB,GAA1B,GACL;AAACD,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GADF;AAEH;;GArBeH,M","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport getAll from '../../services/getAll'\r\n\r\nexport function useAll({ keyword }) {\r\n    const [parameter, setParameter] = useState(\r\n      {loading: false}\r\n    )\r\n    const [page] = useState(1)\r\n\r\n    useEffect(() => {\r\n        getAll({ keyword , page })\r\n            .then(elements => {\r\n              setParameter(elements)\r\n              /*\r\n              setTimeout(() => {\r\n                window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\r\n              }, 500)\r\n              */\r\n            }) \r\n    }, [keyword, page]) \r\n\r\n\r\n    return parameter.length === [] ? {parameter: [undefined], setParameter}\r\n    : {parameter, setParameter}\r\n}"]},"metadata":{},"sourceType":"module"}