{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport getAll from \"../../services/getAll\";\nimport { useMovie } from \"../useMovie\";\nexport function useHandleClickAll(_ref) {\n  _s();\n\n  let {\n    keyword\n  } = _ref;\n  const {\n    parameter,\n    setParameter\n  } = useAl({\n    keyword\n  });\n  const [page, setPages] = useState(2);\n\n  const handleClick = () => {\n    setPages(page + 1);\n    getAll({\n      keyword,\n      page\n    }).then(elements => {\n      setParameter(parameter.concat(elements));\n    });\n    /*\r\n    setTimeout(() => {\r\n    window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\r\n    }, 500)\r\n    */\n  };\n\n  return {\n    handleClick,\n    parameter\n  };\n}\n\n_s(useHandleClickAll, \"KpOgcLH6XxJieHZBzgwuntib8So=\", true);","map":{"version":3,"sources":["C:/Users/Evelyn/OneDrive/Documentos/React-movie-api-v2/React-movie-api-v2/src/hooks/handleClickAll/index.js"],"names":["useState","getAll","useMovie","useHandleClickAll","keyword","parameter","setParameter","useAl","page","setPages","handleClick","then","elements","concat"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAO,SAASC,iBAAT,OAAwC;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC3C,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA4BC,KAAK,CAAC;AAAEH,IAAAA;AAAF,GAAD,CAAvC;AACA,QAAM,CAACI,IAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,CAAD,CAAjC;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAACD,IAAI,GAAC,CAAN,CAAR;AACAP,IAAAA,MAAM,CAAC;AAAEG,MAAAA,OAAF;AAAYI,MAAAA;AAAZ,KAAD,CAAN,CACCG,IADD,CACMC,QAAQ,IAAI;AACdN,MAAAA,YAAY,CAACD,SAAS,CAACQ,MAAV,CAAiBD,QAAjB,CAAD,CAAZ;AACH,KAHD;AAIA;AACR;AACA;AACA;AACA;AACK,GAXD;;AAaA,SAAO;AAACF,IAAAA,WAAD;AAAcL,IAAAA;AAAd,GAAP;AACH;;GAlBeF,iB","sourcesContent":["import {useState} from \"react\"\r\nimport getAll from \"../../services/getAll\"\r\nimport { useMovie } from \"../useMovie\"\r\n\r\n\r\nexport function useHandleClickAll({ keyword }) {\r\n    const {parameter, setParameter} = useAl({ keyword })\r\n    const [page, setPages] = useState(2)\r\n\r\n    const handleClick = () => {\r\n        setPages(page+1)\r\n        getAll({ keyword , page })\r\n        .then(elements => {\r\n            setParameter(parameter.concat(elements))\r\n        })\r\n        /*\r\n        setTimeout(() => {\r\n        window.scrollTo({ left: 0, top: document.body.scrollHeight, behavior: \"smooth\" });\r\n        }, 500)\r\n        */\r\n    }\r\n    \r\n    return {handleClick, parameter}\r\n}"]},"metadata":{},"sourceType":"module"}