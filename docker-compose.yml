version: '3.8'

#networks:
networks:
  web:
    external: true
  internal:
    external: false

# Services
services:
  expressapp:
    container_name: expressapp
    build: ./Server
    expose:
      - 8000
    labels:
      - traefik.http.routers.dbraul.rule=Host(`api.antony.labfp.es`)
      - traefik.http.routers.dbraul.tls=true
      - traefik.http.routers.dbraul.tls.certresolver=lets-encrypt
      - traefik.port=8000
    volumes:
      - ./Server:/usr/src/app

  reactapp:
    container_name: reactapp
    build: ./Client
    expose:
      - 5000
    labels:
      - traefik.http.routers.dbraul.rule=Host(`antony.labfp.es`)
      - traefik.http.routers.dbraul.tls=true
      - traefik.http.routers.dbraul.tls.certresolver=lets-encrypt
      - traefik.port=5000  
    volumes:
      - ./Client:/usr/src/app

  nginx:
    build: ./nginx
    expose:
      - 80
    links:
      - expressapp
      - reactapp
    restart: always

  # MySQL Service
  mysql:
    image: mysql/mysql-server:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: mobee
      MYSQL_USER: root
    volumes:
      - ./.docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - mysqldata:/var/lib/mysql
    # networks:
    #   - internal
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD
      interval: 5s
      retries: 10

# PhpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5
    labels:
      - traefik.http.routers.dbraul.rule=Host(`db.raul.labfp.es`)
      - traefik.http.routers.dbraul.tls=true
      - traefik.http.routers.dbraul.tls.certresolver=lets-encrypt
      - traefik.port=8080
    ports:
      - 8080:80
    environment:
      PMA_HOST: mysql
    networks:
      - internal
      - web
    depends_on:
      - mysql
# Volumes
volumes:

  mysqldata: